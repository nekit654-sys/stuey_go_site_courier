import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card } from '@/components/ui/card';
import { toast } from 'sonner';

const ADMIN_PANEL_URL = 'https://functions.poehali.dev/11e2050a-12a1-4797-9ba5-1f3b27437559';
const HASH_GEN_URL = 'https://functions.poehali.dev/367a9d53-4bd8-4e2c-94b2-0b1d114df77a';

const MASTER_PASSWORD = 'SuperAdmin2024!'; // –ú–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–±—Ä–æ—Å—É

export default function ResetAdminPasswordPage() {
  const [username, setUsername] = useState('');
  const [newPassword, setNewPassword] = useState('');
  const [masterPassword, setMasterPassword] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);

  const handleReset = async () => {
    if (!username.trim() || !newPassword.trim() || !masterPassword.trim()) {
      toast.error('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }

    if (masterPassword !== MASTER_PASSWORD) {
      toast.error('–ù–µ–≤–µ—Ä–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å!');
      setMasterPassword('');
      return;
    }

    if (newPassword.length < 6) {
      toast.error('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');
      return;
    }

    setIsProcessing(true);

    try {
      const hashResponse = await fetch(HASH_GEN_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ password: newPassword })
      });

      if (!hashResponse.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö–µ—à–∞');
      }

      const { hash } = await hashResponse.json();

      const resetResponse = await fetch(ADMIN_PANEL_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          action: 'reset_password',
          username: username.trim(),
          new_password_hash: hash
        })
      });

      const data = await resetResponse.json();

      if (data.success) {
        toast.success(`–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω! –õ–æ–≥–∏–Ω: ${username}`);
        setUsername('');
        setNewPassword('');
        setMasterPassword('');
      } else {
        toast.error(data.message || '–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è');
      }
    } catch (error) {
      console.error('Reset error:', error);
      toast.error('–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è');
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-500 via-pink-500 to-orange-500 flex items-center justify-center p-4">
      <Card className="w-full max-w-md p-8 bg-white/95 backdrop-blur">
        <div className="text-center mb-6">
          <h1 className="text-3xl font-bold mb-2">üîê –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è</h1>
          <p className="text-gray-600">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</p>
        </div>

        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium mb-2 text-red-600 flex items-center gap-2">
              üîê –ú–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å
            </label>
            <Input
              type="password"
              value={masterPassword}
              onChange={(e) => setMasterPassword(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å"
              disabled={isProcessing}
              className="border-red-300 focus:border-red-500"
            />
            <p className="text-xs text-gray-500 mt-1">–¢–æ–ª—å–∫–æ –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞</p>
          </div>

          <div className="h-px bg-gray-200"></div>

          <div>
            <label className="block text-sm font-medium mb-2">–õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∞</label>
            <Input
              type="text"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
              placeholder="nekit654"
              disabled={isProcessing}
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-2">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</label>
            <Input
              type="password"
              value={newPassword}
              onChange={(e) => setNewPassword(e.target.value)}
              placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
              disabled={isProcessing}
              onKeyPress={(e) => e.key === 'Enter' && handleReset()}
            />
          </div>

          <Button
            onClick={handleReset}
            disabled={isProcessing}
            className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700"
          >
            {isProcessing ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å'}
          </Button>

          <div className="mt-6 p-4 bg-blue-50 rounded-lg text-sm">
            <p className="font-semibold mb-2">üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</p>
            <ol className="list-decimal list-inside space-y-1 text-gray-700">
              <li>–í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å (–¥–ª—è –∑–∞—â–∏—Ç—ã)</li>
              <li>–£–∫–∞–∂–∏—Ç–µ –ª–æ–≥–∏–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞</li>
              <li>–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å (–æ—Ç 6 —Å–∏–º–≤–æ–ª–æ–≤)</li>
              <li>–ù–∞–∂–º–∏—Ç–µ "–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å"</li>
            </ol>
          </div>

          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded-lg text-xs text-red-700">
            <p className="font-semibold">‚ö†Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</p>
            <p className="mt-1">–ú–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å: <code className="bg-red-100 px-1 py-0.5 rounded">SuperAdmin2024!</code></p>
            <p className="mt-1 text-[10px] text-red-600">–•—Ä–∞–Ω–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ</p>
          </div>
        </div>
      </Card>
    </div>
  );
}